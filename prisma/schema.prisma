// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String   @id @default(cuid())
  name          String
  email         String?  @unique
  emailVerified Boolean? @default(false)
  passwordHash  String?
  avatar        String?

  createdAt DateTime @default(now())

  emailVerifications EmailVerification[]
  sessions           Session[]
  OauthAccount       OAuthAccount[]
  passwordResets     PasswordReset[]
}

model EmailVerification {
  id        String   @id @default(cuid())
  userId    String
  code      String   @unique
  sentAt    DateTime
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model PasswordReset {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  sentAt    DateTime
  expiresAt DateTime
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model Session {
  id        String   @id
  userId    String
  expiresAt DateTime

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)
}

model OAuthAccount {
  providerId     String
  providerUserId String
  userId         String

  user User @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@id([providerId, providerUserId])
}
